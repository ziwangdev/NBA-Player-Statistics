{"ast":null,"code":"function hasUnderscoreOrHyphen(str) {\n  return str.indexOf(\"-\") > -1 || str.indexOf(\"_\") > -1;\n} // downcases the first letter in a string\n// good for converting from PascalCase to camelCase\n\n\nfunction downcaseFirst(str) {\n  return str[0].toLowerCase() + str.slice(1);\n} // converts a dash or hypen separated string to camelCase\n\n\nfunction unDashHyphen(str) {\n  return str.trim().toLowerCase().replace(/[-_\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n} // checks if a string consists of only uppercase letters\n\n\nfunction isAllUpperCase(str) {\n  return str.split(\"\").map(ch => ch.charCodeAt(0)).every(n => n >= 65 && n <= 90);\n}\n\nfunction jsify(str) {\n  if (isAllUpperCase(str)) {\n    return str.toLowerCase();\n  }\n\n  if (hasUnderscoreOrHyphen(str)) {\n    return unDashHyphen(str);\n  }\n\n  return downcaseFirst(str);\n}\n\nfunction interpolate(_str) {\n  return function (obj) {\n    return Object.keys(obj).reduce(function (str, key) {\n      return str.replace(new RegExp(`__${key}__`, \"g\"), obj[key]);\n    }, _str);\n  };\n}\n\nmodule.exports = {\n  hasUnderscoreOrHyphen,\n  downcaseFirst,\n  unDashHyphen,\n  isAllUpperCase,\n  jsify,\n  interpolate\n};","map":{"version":3,"sources":["/Users/mango/Documents/Personal/Web/NBA/node_modules/nba/src/util/string.js"],"names":["hasUnderscoreOrHyphen","str","indexOf","downcaseFirst","toLowerCase","slice","unDashHyphen","trim","replace","match","c","toUpperCase","isAllUpperCase","split","map","ch","charCodeAt","every","n","jsify","interpolate","_str","obj","Object","keys","reduce","key","RegExp","module","exports"],"mappings":"AAAA,SAASA,qBAAT,CAAgCC,GAAhC,EAAqC;AACnC,SAAOA,GAAG,CAACC,OAAJ,CAAY,GAAZ,IAAmB,CAAC,CAApB,IAAyBD,GAAG,CAACC,OAAJ,CAAY,GAAZ,IAAmB,CAAC,CAApD;AACD,C,CAED;AACA;;;AACA,SAASC,aAAT,CAAwBF,GAAxB,EAA6B;AAC3B,SAAOA,GAAG,CAAC,CAAD,CAAH,CAAOG,WAAP,KAAuBH,GAAG,CAACI,KAAJ,CAAU,CAAV,CAA9B;AACD,C,CAED;;;AACA,SAASC,YAAT,CAAuBL,GAAvB,EAA4B;AAC1B,SAAOA,GAAG,CACPM,IADI,GAEJH,WAFI,GAGJI,OAHI,CAGI,cAHJ,EAGoB,UAAUC,KAAV,EAAiBC,CAAjB,EAAoB;AAC3C,WAAOA,CAAC,GAAGA,CAAC,CAACC,WAAF,EAAH,GAAqB,EAA7B;AACD,GALI,CAAP;AAMD,C,CAED;;;AACA,SAASC,cAAT,CAAyBX,GAAzB,EAA8B;AAC5B,SAAOA,GAAG,CACPY,KADI,CACE,EADF,EAEJC,GAFI,CAEAC,EAAE,IAAIA,EAAE,CAACC,UAAH,CAAc,CAAd,CAFN,EAGJC,KAHI,CAGEC,CAAC,IAAIA,CAAC,IAAI,EAAL,IAAWA,CAAC,IAAI,EAHvB,CAAP;AAID;;AAED,SAASC,KAAT,CAAgBlB,GAAhB,EAAqB;AACnB,MAAIW,cAAc,CAACX,GAAD,CAAlB,EAAyB;AACvB,WAAOA,GAAG,CAACG,WAAJ,EAAP;AACD;;AAED,MAAIJ,qBAAqB,CAACC,GAAD,CAAzB,EAAgC;AAC9B,WAAOK,YAAY,CAACL,GAAD,CAAnB;AACD;;AAED,SAAOE,aAAa,CAACF,GAAD,CAApB;AACD;;AAED,SAASmB,WAAT,CAAsBC,IAAtB,EAA4B;AAC1B,SAAO,UAAUC,GAAV,EAAe;AACpB,WAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,CAAwB,UAAUxB,GAAV,EAAeyB,GAAf,EAAoB;AACjD,aAAOzB,GAAG,CAACO,OAAJ,CAAY,IAAImB,MAAJ,CAAY,KAAID,GAAI,IAApB,EAAyB,GAAzB,CAAZ,EAA2CJ,GAAG,CAACI,GAAD,CAA9C,CAAP;AACD,KAFM,EAEJL,IAFI,CAAP;AAGD,GAJD;AAKD;;AAEDO,MAAM,CAACC,OAAP,GAAiB;AACf7B,EAAAA,qBADe;AAEfG,EAAAA,aAFe;AAGfG,EAAAA,YAHe;AAIfM,EAAAA,cAJe;AAKfO,EAAAA,KALe;AAMfC,EAAAA;AANe,CAAjB","sourcesContent":["function hasUnderscoreOrHyphen (str) {\n  return str.indexOf(\"-\") > -1 || str.indexOf(\"_\") > -1;\n}\n\n// downcases the first letter in a string\n// good for converting from PascalCase to camelCase\nfunction downcaseFirst (str) {\n  return str[0].toLowerCase() + str.slice(1);\n}\n\n// converts a dash or hypen separated string to camelCase\nfunction unDashHyphen (str) {\n  return str\n    .trim()\n    .toLowerCase()\n    .replace(/[-_\\s]+(.)?/g, function (match, c) {\n      return c ? c.toUpperCase() : \"\";\n    });\n}\n\n// checks if a string consists of only uppercase letters\nfunction isAllUpperCase (str) {\n  return str\n    .split(\"\")\n    .map(ch => ch.charCodeAt(0))\n    .every(n => n >= 65 && n <= 90);\n}\n\nfunction jsify (str) {\n  if (isAllUpperCase(str)) {\n    return str.toLowerCase();\n  }\n\n  if (hasUnderscoreOrHyphen(str)) {\n    return unDashHyphen(str);\n  }\n\n  return downcaseFirst(str);\n}\n\nfunction interpolate (_str) {\n  return function (obj) {\n    return Object.keys(obj).reduce(function (str, key) {\n      return str.replace(new RegExp(`__${key}__`, \"g\"), obj[key]);\n    }, _str);\n  };\n}\n\nmodule.exports = {\n  hasUnderscoreOrHyphen,\n  downcaseFirst,\n  unDashHyphen,\n  isAllUpperCase,\n  jsify,\n  interpolate,\n};\n"]},"metadata":{},"sourceType":"script"}