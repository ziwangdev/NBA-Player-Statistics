{"ast":null,"code":"const camelCase = require(\"camel-case\");\n\nconst parameters = [{\n  name: \"name\",\n  default: \"offensive\",\n  values: [\"offensive\", \"defensive\"]\n}, {\n  name: \"seasonType\",\n  default: \"Reg\",\n  values: [\"Reg\", \"Post\"]\n}, {\n  name: \"category\",\n  default: null,\n  values: [\"Transition\", \"PRBallHandler\", \"PRRollman\", \"Postup\", \"Spotup\", \"Handoff\", \"Cut\", \"OffScreen\", \"OffRebound\", \"Misc\"]\n}, {\n  name: \"season\",\n  default: 2017\n}, {\n  name: \"limit\",\n  default: 50\n}];\nconst synergyEndpoints = [{\n  name: \"player_play_type\",\n  url: \"http://stats-prod.nba.com/wp-json/statscms/v1/synergy/player/\"\n}, {\n  name: \"team_play_type\",\n  url: \"http://stats-prod.nba.com/wp-json/statscms/v1/synergy/team/\"\n}];\nconst defaults = {};\nparameters.forEach(function (param) {\n  defaults[param.name] = param.default;\n});\n\nfunction makeSynergyMethod(endpoint, transport) {\n  function synergyMethod(query = {}) {\n    const reqParams = Object.assign({}, defaults, query);\n    return transport(endpoint.url, reqParams).then(function (response) {\n      return response;\n    });\n  }\n\n  synergyMethod.defaults = defaults;\n  return synergyMethod;\n}\n\nfunction makeSynergyClient(transport) {\n  const client = {};\n  synergyEndpoints.forEach(function (endpoint) {\n    client[camelCase(endpoint.name)] = makeSynergyMethod(endpoint, transport);\n  });\n  client.withTransport = makeSynergyClient;\n  return client;\n}\n\nmodule.exports = makeSynergyClient(require(\"./get-json\"));","map":{"version":3,"sources":["/Users/mango/Documents/Personal/Web/NBA/node_modules/nba/src/synergy.js"],"names":["camelCase","require","parameters","name","default","values","synergyEndpoints","url","defaults","forEach","param","makeSynergyMethod","endpoint","transport","synergyMethod","query","reqParams","Object","assign","then","response","makeSynergyClient","client","withTransport","module","exports"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,OAAO,EAAE,WAFX;AAGEC,EAAAA,MAAM,EAAE,CACN,WADM,EAEN,WAFM;AAHV,CADiB,EASjB;AACEF,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,OAAO,EAAE,KAFX;AAGEC,EAAAA,MAAM,EAAE,CACN,KADM,EAEN,MAFM;AAHV,CATiB,EAiBjB;AACEF,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,OAAO,EAAE,IAFX;AAGEC,EAAAA,MAAM,EAAE,CACN,YADM,EAEN,eAFM,EAGN,WAHM,EAIN,QAJM,EAKN,QALM,EAMN,SANM,EAON,KAPM,EAQN,WARM,EASN,YATM,EAUN,MAVM;AAHV,CAjBiB,EAiCjB;AACEF,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,OAAO,EAAE;AAFX,CAjCiB,EAqCjB;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,OAAO,EAAE;AAFX,CArCiB,CAAnB;AA2CA,MAAME,gBAAgB,GAAG,CACvB;AAAEH,EAAAA,IAAI,EAAE,kBAAR;AAA4BI,EAAAA,GAAG,EAAE;AAAjC,CADuB,EAEvB;AAAEJ,EAAAA,IAAI,EAAE,gBAAR;AAA0BI,EAAAA,GAAG,EAAE;AAA/B,CAFuB,CAAzB;AAKA,MAAMC,QAAQ,GAAG,EAAjB;AACAN,UAAU,CAACO,OAAX,CAAmB,UAAUC,KAAV,EAAiB;AAClCF,EAAAA,QAAQ,CAACE,KAAK,CAACP,IAAP,CAAR,GAAuBO,KAAK,CAACN,OAA7B;AACD,CAFD;;AAIA,SAASO,iBAAT,CAA4BC,QAA5B,EAAsCC,SAAtC,EAAiD;AAC/C,WAASC,aAAT,CAAwBC,KAAK,GAAG,EAAhC,EAAoC;AAClC,UAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,QAAlB,EAA4BO,KAA5B,CAAlB;AACA,WAAOF,SAAS,CAACD,QAAQ,CAACL,GAAV,EAAeS,SAAf,CAAT,CACJG,IADI,CACC,UAAUC,QAAV,EAAoB;AACxB,aAAOA,QAAP;AACD,KAHI,CAAP;AAID;;AAEDN,EAAAA,aAAa,CAACN,QAAd,GAAyBA,QAAzB;AAEA,SAAOM,aAAP;AACD;;AAED,SAASO,iBAAT,CAA4BR,SAA5B,EAAuC;AACrC,QAAMS,MAAM,GAAG,EAAf;AACAhB,EAAAA,gBAAgB,CAACG,OAAjB,CAAyB,UAAUG,QAAV,EAAoB;AAC3CU,IAAAA,MAAM,CAACtB,SAAS,CAACY,QAAQ,CAACT,IAAV,CAAV,CAAN,GAAmCQ,iBAAiB,CAACC,QAAD,EAAWC,SAAX,CAApD;AACD,GAFD;AAGAS,EAAAA,MAAM,CAACC,aAAP,GAAuBF,iBAAvB;AACA,SAAOC,MAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBJ,iBAAiB,CAACpB,OAAO,CAAC,YAAD,CAAR,CAAlC","sourcesContent":["const camelCase = require(\"camel-case\");\n\nconst parameters = [\n  {\n    name: \"name\",\n    default: \"offensive\",\n    values: [\n      \"offensive\",\n      \"defensive\",\n      ],\n  },\n  {\n    name: \"seasonType\",\n    default: \"Reg\",\n    values: [\n      \"Reg\",\n      \"Post\",\n    ],\n  },\n  {\n    name: \"category\",\n    default: null,\n    values: [\n      \"Transition\",\n      \"PRBallHandler\",\n      \"PRRollman\",\n      \"Postup\",\n      \"Spotup\",\n      \"Handoff\",\n      \"Cut\",\n      \"OffScreen\",\n      \"OffRebound\",\n      \"Misc\",\n    ],\n  },\n  {\n    name: \"season\",\n    default: 2017,\n  },\n  {\n    name: \"limit\",\n    default: 50,\n  },\n];\n\nconst synergyEndpoints = [\n  { name: \"player_play_type\", url: \"http://stats-prod.nba.com/wp-json/statscms/v1/synergy/player/\" },\n  { name: \"team_play_type\", url: \"http://stats-prod.nba.com/wp-json/statscms/v1/synergy/team/\" },\n];\n\nconst defaults = {};\nparameters.forEach(function (param) {\n  defaults[param.name] = param.default;\n});\n\nfunction makeSynergyMethod (endpoint, transport) {\n  function synergyMethod (query = {}) {\n    const reqParams = Object.assign({}, defaults, query);\n    return transport(endpoint.url, reqParams)\n      .then(function (response) {\n        return response;\n      });\n  }\n\n  synergyMethod.defaults = defaults;\n\n  return synergyMethod;\n}\n\nfunction makeSynergyClient (transport) {\n  const client = {};\n  synergyEndpoints.forEach(function (endpoint) {\n    client[camelCase(endpoint.name)] = makeSynergyMethod(endpoint, transport);\n  });\n  client.withTransport = makeSynergyClient;\n  return client;\n}\n\nmodule.exports = makeSynergyClient(require(\"./get-json\"));\n"]},"metadata":{},"sourceType":"script"}