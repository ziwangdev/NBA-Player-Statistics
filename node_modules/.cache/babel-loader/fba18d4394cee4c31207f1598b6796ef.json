{"ast":null,"code":"var _jsxFileName = \"/Users/mango/Documents/Personal/Web/NBA/src/components/ShotChart.js\";\nimport React from 'react';\nimport nba from '../nba-client';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\nwindow.d3_hexbin = {\n  hexbin: hexbin\n}; // workaround library problem\n\nclass ShotChart extends React.Component {\n  componentDidUpdate() {\n    nba.stats.shots({\n      PlayerID: this.props.playerId\n    }).then(response => {\n      const final_shots = response.shot_Chart_Detail.map(shot => ({\n        x: (shot.locX + 250) / 10,\n        y: (shot.locY + 50) / 10,\n        action_type: shot.actionType,\n        shot_distance: shot.shotDistance,\n        shot_made_flag: shot.shotMadeFlag\n      }));\n      console.log(final_shots);\n      const courtSelection = d3.select(\"#shot-chart\");\n      courtSelection.html('');\n      const chart_court = court().width(500);\n      const chart_shots = shots().shotRenderThreshold(this.props.minCount).displayToolTips(this.props.displayTooltip).displayType(this.props.chartType);\n      courtSelection.call(chart_court);\n      courtSelection.datum(final_shots).call(chart_shots);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"shot-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }\n    });\n  }\n\n}\n\nShotChart.propTypes = {\n  playerId: PropTypes.number.isRequired,\n  minCount: PropTypes.number,\n  chartType: PropTypes.string,\n  displayTooltip: PropTypes.bool\n};\nexport default ShotChart;","map":{"version":3,"sources":["/Users/mango/Documents/Personal/Web/NBA/src/components/ShotChart.js"],"names":["React","nba","d3","hexbin","court","shots","PropTypes","window","d3_hexbin","ShotChart","Component","componentDidUpdate","stats","PlayerID","props","playerId","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","console","log","courtSelection","select","html","chart_court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","render","propTypes","number","isRequired","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,cAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEAC,MAAM,CAACC,SAAP,GAAmB;AAACL,EAAAA,MAAM,EAAGA;AAAV,CAAnB,C,CAAsC;;AAEtC,MAAMM,SAAN,SAAwBT,KAAK,CAACU,SAA9B,CAAwC;AAQvCC,EAAAA,kBAAkB,GAAG;AACnBV,IAAAA,GAAG,CAACW,KAAJ,CAAUP,KAAV,CAAgB;AACdQ,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC;AADP,KAAhB,EAEGC,IAFH,CAESC,QAAD,IAAc;AACpB,YAAMC,WAAW,GAAGD,QAAQ,CAACE,iBAAT,CAA2BC,GAA3B,CAA+BC,IAAI,KAAK;AAC1DC,QAAAA,CAAC,EAAE,CAACD,IAAI,CAACE,IAAL,GAAY,GAAb,IAAoB,EADmC;AAE1DC,QAAAA,CAAC,EAAE,CAACH,IAAI,CAACI,IAAL,GAAY,EAAb,IAAmB,EAFoC;AAG1DC,QAAAA,WAAW,EAAEL,IAAI,CAACM,UAHwC;AAI1DC,QAAAA,aAAa,EAAEP,IAAI,CAACQ,YAJsC;AAK1DC,QAAAA,cAAc,EAAET,IAAI,CAACU;AALqC,OAAL,CAAnC,CAApB;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;AACA,YAAMgB,cAAc,GAAGhC,EAAE,CAACiC,MAAH,CAAU,aAAV,CAAvB;AACAD,MAAAA,cAAc,CAACE,IAAf,CAAoB,EAApB;AACA,YAAMC,WAAW,GAAGjC,KAAK,GAAGkC,KAAR,CAAc,GAAd,CAApB;AACA,YAAMC,WAAW,GAChBlC,KAAK,GACFmC,mBADH,CACuB,KAAK1B,KAAL,CAAW2B,QADlC,EAEGC,eAFH,CAEmB,KAAK5B,KAAL,CAAW6B,cAF9B,EAGGC,WAHH,CAGe,KAAK9B,KAAL,CAAW+B,SAH1B,CADD;AAKAX,MAAAA,cAAc,CAACY,IAAf,CAAoBT,WAApB;AACAH,MAAAA,cAAc,CAACa,KAAf,CAAqB7B,WAArB,EAAkC4B,IAAlC,CAAuCP,WAAvC;AACD,KArBD;AAsBD;;AACDS,EAAAA,MAAM,GAAG;AACP,wBACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGD;;AApCsC;;AAAlCvC,S,CACEwC,S,GAAY;AACjBlC,EAAAA,QAAQ,EAAET,SAAS,CAAC4C,MAAV,CAAiBC,UADV;AAEjBV,EAAAA,QAAQ,EAAEnC,SAAS,CAAC4C,MAFH;AAGjBL,EAAAA,SAAS,EAAEvC,SAAS,CAAC8C,MAHJ;AAIjBT,EAAAA,cAAc,EAAErC,SAAS,CAAC+C;AAJT,C;AAsCpB,eAAe5C,SAAf","sourcesContent":["import React from 'react';\nimport nba from '../nba-client';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\n\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\n\nclass ShotChart extends React.Component {\n static propTypes = {\n   playerId: PropTypes.number.isRequired,\n   minCount: PropTypes.number,\n   chartType: PropTypes.string,\n   displayTooltip: PropTypes.bool,\n }\n\n componentDidUpdate() {\n   nba.stats.shots({\n     PlayerID: this.props.playerId\n   }).then((response) => {\n     const final_shots = response.shot_Chart_Detail.map(shot => ({\n       x: (shot.locX + 250) / 10,\n       y: (shot.locY + 50) / 10,\n       action_type: shot.actionType,\n       shot_distance: shot.shotDistance,\n       shot_made_flag: shot.shotMadeFlag,\n     }));\n     console.log(final_shots);\n     const courtSelection = d3.select(\"#shot-chart\");\n     courtSelection.html('');\n     const chart_court = court().width(500);\n     const chart_shots = \n      shots()\n        .shotRenderThreshold(this.props.minCount)\n        .displayToolTips(this.props.displayTooltip)\n        .displayType(this.props.chartType);\n     courtSelection.call(chart_court);\n     courtSelection.datum(final_shots).call(chart_shots);\n   });\n }\n render() {\n   return (\n       <div id=\"shot-chart\"></div>\n   );\n }\n}\n\nexport default ShotChart;"]},"metadata":{},"sourceType":"module"}