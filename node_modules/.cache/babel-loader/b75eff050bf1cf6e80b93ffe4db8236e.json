{"ast":null,"code":"// this includes endpoints at data.nba.com\nlet transport = require(\"./get-json\");\n\nconst {\n  interpolate\n} = require(\"./util/string\");\n\nconst scoreboardURL = interpolate(\"http://data.nba.com/data/5s/json/cms/noseason/scoreboard/__date__/games.json\");\nconst boxScoreURL = interpolate(\"http://data.nba.com/data/5s/json/cms/noseason/game/__date__/__gameId__/boxscore.json\");\nconst playByPlayURL = interpolate(\"http://data.nba.com/data/5s/json/cms/noseason/game/__date__/__gameId__/pbp_all.json\");\nconst scheduleURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/schedule.json\");\nconst teamScheduleURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/teams/__teamId__/schedule.json\");\nconst previewArticleURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__date__/__gameId___preview_article.json\");\nconst recapArticleURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__date__/__gameId___recap_article.json\");\nconst leadTrackerURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__date__/__gameId___lead_tracker___period__.json\");\nconst playoffsBracketURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/playoffsBracket.json\");\nconst teamLeadersURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/teams/__teamId__/leaders.json\");\nconst teamStatsRankingsURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/team_stats_rankings.json\");\nconst coachesURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/coaches.json\");\nconst teamsURL = interpolate(\"http://data.nba.net/data/10s/prod/v1/__year__/teams.json\");\nconst calendarURL = \"http://data.nba.net/data/10s/prod/v1/calendar.json\";\nconst standingsURL = \"http://data.nba.net/data/10s/prod/v1/current/standings_all.json\";\n\nconst withTransport = newTransport => {\n  transport = newTransport;\n}; // NOTE: the 'date' argument should be a string in format like \"20181008\" (which indicates Oct 8 2018)\n// You *can* pass a Date object but beware of timezone weirdness!\n// NOTE: the 'season' argument is the first year of the NBA season e.g. \"2018\" for the 2018-19 season\n\n\nconst scoreboard = date => transport(scoreboardURL({\n  date: dateToYYYYMMDD(date)\n}));\n\nscoreboard.defaults = {\n  date: null\n};\n\nconst boxScore = (date, gameId) => transport(boxScoreURL({\n  date: dateToYYYYMMDD(date),\n  gameId\n}));\n\nboxScore.defaults = {\n  date: null,\n  gameId: null\n};\n\nconst playByPlay = (date, gameId) => transport(playByPlayURL({\n  date: dateToYYYYMMDD(date),\n  gameId\n}));\n\nplayByPlay.defaults = {\n  date: null,\n  gameId: null\n};\n\nconst schedule = season => transport(scheduleURL({\n  season\n}));\n\nschedule.defaults = {\n  season: null\n};\n\nconst teamSchedule = (season, teamId) => transport(teamScheduleURL({\n  season,\n  teamId\n}));\n\nteamSchedule.defaults = {\n  season: null,\n  teamId: null\n};\n\nconst previewArticle = (date, gameId) => transport(previewArticleURL({\n  date: dateToYYYYMMDD(date),\n  gameId\n}));\n\npreviewArticle.defaults = {\n  date: null,\n  gameId: null\n};\n\nconst recapArticle = (date, gameId) => transport(recapArticleURL({\n  date: dateToYYYYMMDD(date),\n  gameId\n}));\n\nrecapArticle.defaults = {\n  date: null,\n  gameId: null\n};\n\nconst leadTracker = (date, gameId, period) => transport(leadTrackerURL({\n  date: dateToYYYYMMDD(date),\n  gameId,\n  period\n}));\n\nleadTracker.defaults = {\n  date: null,\n  gameId: null,\n  period: null\n};\n\nconst playoffsBracket = season => transport(playoffsBracketURL({\n  season\n}));\n\nplayoffsBracket.defaults = {\n  season: null\n};\n\nconst teamLeaders = (season, teamId) => transport(teamLeadersURL({\n  season,\n  teamId\n}));\n\nteamLeaders.defaults = {\n  season: null,\n  teamId: null\n};\n\nconst teamStatsRankings = season => transport(teamStatsRankingsURL({\n  season\n}));\n\nteamStatsRankings.defaults = {\n  season: null\n};\n\nconst coaches = season => transport(coachesURL({\n  season\n}));\n\ncoaches.defaults = {\n  season: null\n};\n\nconst teams = (year = \"2019\") => transport(teamsURL({\n  year\n}));\n\nteams.defaults = {\n  year: null\n};\n\nconst calendar = () => transport(calendarURL);\n\ncalendar.defaults = {};\n\nconst standings = () => transport(standingsURL);\n\nstandings.defaults = {};\n\nfunction dateToYYYYMMDD(date) {\n  if (date instanceof Date) {\n    return [date.getFullYear(), String(date.getMonth() + 1).padStart(2, 0), String(date.getDate()).padStart(2, 0)].join(\"\");\n  } // TODO: better checking here?\n\n\n  return date;\n}\n\nmodule.exports = {\n  scoreboard,\n  boxScore,\n  playByPlay,\n  schedule,\n  teamSchedule,\n  previewArticle,\n  recapArticle,\n  leadTracker,\n  playoffsBracket,\n  teamLeaders,\n  teamStatsRankings,\n  coaches,\n  teams,\n  calendar,\n  standings,\n  withTransport\n};","map":{"version":3,"sources":["/Users/mango/Documents/Personal/Web/NBA/node_modules/nba/src/data.js"],"names":["transport","require","interpolate","scoreboardURL","boxScoreURL","playByPlayURL","scheduleURL","teamScheduleURL","previewArticleURL","recapArticleURL","leadTrackerURL","playoffsBracketURL","teamLeadersURL","teamStatsRankingsURL","coachesURL","teamsURL","calendarURL","standingsURL","withTransport","newTransport","scoreboard","date","dateToYYYYMMDD","defaults","boxScore","gameId","playByPlay","schedule","season","teamSchedule","teamId","previewArticle","recapArticle","leadTracker","period","playoffsBracket","teamLeaders","teamStatsRankings","coaches","teams","year","calendar","standings","Date","getFullYear","String","getMonth","padStart","getDate","join","module","exports"],"mappings":"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","sourcesContent":["// this includes endpoints at data.nba.com\n\nlet transport = require(\"./get-json\");\nconst { interpolate } = require(\"./util/string\");\n\nconst scoreboardURL = interpolate(\"http://data.nba.com/data/5s/json/cms/noseason/scoreboard/__date__/games.json\");\nconst boxScoreURL = interpolate(\"http://data.nba.com/data/5s/json/cms/noseason/game/__date__/__gameId__/boxscore.json\");\nconst playByPlayURL = interpolate(\"http://data.nba.com/data/5s/json/cms/noseason/game/__date__/__gameId__/pbp_all.json\");\nconst scheduleURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/schedule.json\");\nconst teamScheduleURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/teams/__teamId__/schedule.json\");\nconst previewArticleURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__date__/__gameId___preview_article.json\");\nconst recapArticleURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__date__/__gameId___recap_article.json\");\nconst leadTrackerURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__date__/__gameId___lead_tracker___period__.json\");\nconst playoffsBracketURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/playoffsBracket.json\");\nconst teamLeadersURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/teams/__teamId__/leaders.json\");\nconst teamStatsRankingsURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/team_stats_rankings.json\");\nconst coachesURL = interpolate(\"http://data.nba.com/data/10s/prod/v1/__season__/coaches.json\");\nconst teamsURL = interpolate(\"http://data.nba.net/data/10s/prod/v1/__year__/teams.json\");\n\nconst calendarURL = \"http://data.nba.net/data/10s/prod/v1/calendar.json\";\nconst standingsURL = \"http://data.nba.net/data/10s/prod/v1/current/standings_all.json\";\n\nconst withTransport = (newTransport) => {\n  transport = newTransport;\n};\n\n// NOTE: the 'date' argument should be a string in format like \"20181008\" (which indicates Oct 8 2018)\n// You *can* pass a Date object but beware of timezone weirdness!\n\n// NOTE: the 'season' argument is the first year of the NBA season e.g. \"2018\" for the 2018-19 season\n\nconst scoreboard = date => transport(scoreboardURL({ date: dateToYYYYMMDD(date) }));\nscoreboard.defaults = { date: null };\n\nconst boxScore = (date, gameId) => transport(boxScoreURL({ date: dateToYYYYMMDD(date), gameId }));\nboxScore.defaults = { date: null, gameId: null };\n\nconst playByPlay = (date, gameId) => transport(playByPlayURL({ date: dateToYYYYMMDD(date), gameId }));\nplayByPlay.defaults = { date: null, gameId: null };\n\nconst schedule = (season) => transport(scheduleURL({ season }));\nschedule.defaults = { season: null };\n\nconst teamSchedule = (season, teamId) => transport(teamScheduleURL({ season, teamId }));\nteamSchedule.defaults = { season: null, teamId: null };\n\nconst previewArticle = (date, gameId) => transport(previewArticleURL({date: dateToYYYYMMDD(date), gameId }));\npreviewArticle.defaults = { date: null, gameId: null };\n\nconst recapArticle = (date, gameId) => transport(recapArticleURL({date: dateToYYYYMMDD(date), gameId }));\nrecapArticle.defaults = { date: null, gameId: null };\n\nconst leadTracker = (date, gameId, period) => transport(leadTrackerURL({date: dateToYYYYMMDD(date), gameId, period }));\nleadTracker.defaults = { date: null, gameId: null, period: null };\n\nconst playoffsBracket = (season) => transport(playoffsBracketURL({ season }));\nplayoffsBracket.defaults = { season: null };\n\nconst teamLeaders = (season, teamId) => transport(teamLeadersURL({ season, teamId }));\nteamLeaders.defaults = { season: null, teamId: null };\n\nconst teamStatsRankings = (season) => transport(teamStatsRankingsURL({ season }));\nteamStatsRankings.defaults = { season: null };\n\nconst coaches = (season) => transport(coachesURL({ season }));\ncoaches.defaults = { season: null };\n\nconst teams = (year = \"2019\") => transport(teamsURL({ year }));\nteams.defaults = { year: null };\n\nconst calendar = () => transport(calendarURL);\ncalendar.defaults = {};\n\nconst standings = () => transport(standingsURL);\nstandings.defaults = {};\n\nfunction dateToYYYYMMDD (date) {\n  if (date instanceof Date) {\n    return [\n      date.getFullYear(),\n      String(date.getMonth() + 1).padStart(2, 0),\n      String(date.getDate()).padStart(2, 0),\n    ].join(\"\");\n  }\n\n  // TODO: better checking here?\n\n  return date;\n}\n\nmodule.exports = {\n  scoreboard,\n  boxScore,\n  playByPlay,\n  schedule,\n  teamSchedule,\n  previewArticle,\n  recapArticle,\n  leadTracker,\n  playoffsBracket,\n  teamLeaders,\n  teamStatsRankings,\n  coaches,\n  teams,\n  calendar,\n  standings,\n  withTransport,\n};"]},"metadata":{},"sourceType":"script"}